-# View should be logicless
-# No Dimensions in CSS
-# If you don't have Javascript you dont need rollovers
-# Javascript-less site should be minimal and semantic

-# http://0.0.0.0:3000/widgets/textToggleItem?initialState=1

- push( hoo_text_toggle_item )

-# adding the data-jsclass attribute means that a javascript instance will be created on-load
-# Todo: I also need to have it created if it is inserted by ajax!

- textStyle = "color:#{_.labelColor}; line-height:#{_.size[1]-2}px; padding:0; margin:0; position:relative; letter-spacing:0.0pc; word-spacing:-0.1pc;"

-# NB! This height isnt a multiple of 15, it has to be used in the menu to make it a multiple of 15
-# zoom: 1; *display:inline; is needed inline-block hack for ie

- div_attrs = { :class=>"dynamicWidthButton", :style=>"font:bold 10px Helvetica; overflow: auto; text-align: center; background:transparent url( #{_.img} ) 0 #{_.size[1]*-_.initialState}px; padding:0 1.5em 0 1.5em; margin:0; display:inline-block; height: #{_.size[1]-2}px; zoom: 1; *display:inline;" }
- anchor_attrs = { :href=>"#{_.action}" }

- if(  _.initialState==0 )
	- div_attrs.merge!( { :disabled=>"disabled" } )
	- anchor_attrs.merge!( { :disabled=>"disabled" } )
	- div_attrs[:style] += "pointer-events:none;"
	- anchor_attrs.merge!( { :style=>"pointer-events:none;" } )
	- textStyle += "opacity:0.6;"
- else
	- anchor_attrs.merge!( { :style=>"" } )
	- textStyle += ""

- anchor_attrs[:style] += "#{textStyle};"

- if( _.position=='left' )
	- div_attrs[:style] += "border:1px solid #ffffff; border-right:0 none black; -webkit-border-bottom-left-radius:#{_.cornerRad}px; -moz-border-radius-bottomleft:#{_.cornerRad}px; border-bottom-left-radius:#{_.cornerRad}px; -webkit-border-top-left-radius:#{_.cornerRad}px; -moz-border-radius-topleft:#{_.cornerRad}px; border-top-left-radius:#{_.cornerRad}px;"
-elsif( _.position=='right' )
	- div_attrs[:style] += "border:1px solid #ffffff; border-left:0 none black; -webkit-border-bottom-right-radius:#{_.cornerRad}px; -moz-border-radius-bottomright:#{_.cornerRad}px; border-bottom-right-radius:#{_.cornerRad}px; -webkit-border-top-right-radius:#{_.cornerRad}px; -moz-border-radius-topright:#{_.cornerRad}px; border-top-right-radius:#{_.cornerRad}px;"
- else
	- div_attrs[:style] += "border:1px solid #ffffff; border-left:0 none black; border-right:0 none black;"

%div[_]{ :data=> {'jsclassd'=>'HooDivButtonToggleDynamicWidth'} }
	%div{div_attrs}
		%a{anchor_attrs}
			-# Insert the correct label for this initialState
			#{_.labelStates[_.initialState]}

- if( _.includeOnce? )
	%style(type="text/css")
		:sass
			.dynamicWidthButton
				-webkit-box-shadow: rgba(0,0,0,0.1) 0px 0px 10px inset
				-moz-box-shadow: rgba(0,0,0,0.1) 0px 0px 10px inset

			.dynamicWidthButton[disabled="disabled"]
				-webkit-box-shadow: rgba(0,0,0,0.1) 0px 2px 10px inset
				-moz-box-shadow: rgba(0,0,0,0.1) 0px 2px 10px inset


-# = render :partial => "gui/shared/first_partial"
