- push( rounded_triangle )

-# http://0.0.0.0:3000/widgets/roundedTriangle

%div[_]{ :data=>{'jsclass'=>'ABoo.RoundedTriangle'}, :style=>"width:100%; height:100%;" }
	%canvas( width="100" height="12" style="position:absolute; top:0; margin:2px;" )

- if( _.includeOnce? )
	:javascript

		ABoo.RoundedTriangle2 = ABoo.HooWidget.extend({

			_$canvas: undefined,
			_hooCanvas: undefined,
			_started: false,

			// stuff to go in Sprite
			_parentCanvas: undefined,
			_busyAngle: 0,

			init: function( /* init never has args */ ) {
				arguments.callee.base.apply(this,arguments);

				this._$canvas = this.div$.find( "canvas:first" );
				this._hooCanvas = ABoo.HooCanvas.create({_$canvas:this._$canvas});
				this._hooCanvas.addSubview(this);
			},

			setupDidComplete: function() {

				this.resizeAll();
				this._started = true;

				ABoo.ShiteDisplayLink.sharedDisplayLink.registerListener(this);
			},

			parentDidResize: function() {

				//if(Modernizr.canvas!==undefined)
				if(this._started===true)
					this.resizeAll();
				//}
			},

			resizeAll: function() {

				var newWidth = this.div$.width();
				var newHeight = this.div$.outerHeight();
				var currentWidth = this._$canvas.width();
				var currentHeight = this._$canvas.outerHeight();
				// resize canvas
				if( newWidth!=currentWidth || newHeight!=currentHeight) {
					//console.log("resize");

					this._$canvas.attr({ width:newWidth, height:newHeight }); // setting the size resets the canvas
					this.drawNow( this._hooCanvas.ctx(), newWidth, newHeight );
				}
			},

			timeUpdate: function( time ) {
				this._busyAngle = this._busyAngle + 1;
				this._hooCanvas.setNeedsDisplay();
			},

			//-- called from canvas Here!
			drawInRect: function() {
				this.drawNow( this._hooCanvas.ctx(), this.div$.width(), this.div$.outerHeight() );
			},

			drawNow: function( ctx, width, height ) {

				try {
				ctx.save();

					ctx.setTransform(1, 0, 0, 1, 0, 0);
					ctx.clearRect(0,0,width,height);
					ctx.globalAlpha = 1.0;
					ctx.globalCompositeOperation = 'source-over';

					// var buttonSprite = ABoo.PlayButtonSprite.create();
					// buttonSprite._isDisabled = false;
					// buttonSprite._isDown = true;
					// buttonSprite.draw( ctx, width, height );

					// var pauseSprite = ABoo.PauseButtonSprite.create();
					// pauseSprite._isDown = true;
					// pauseSprite.draw( ctx, width, height );

					var donutTestSprite = ABoo.DonutTestSprite.create();
					donutTestSprite.draw( ctx, width, height, this._busyAngle );

				ctx.restore();
				} catch(err) {
					alert(err);
				}
			}
		});

