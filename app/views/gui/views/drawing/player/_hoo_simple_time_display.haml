-# http://0.0.0.0:3000/widgets/HooSimpleTimeDisplay?initialState=1

-# push( hoo_simple_time_display )

%div[_]( data-jsclass='ABoo.HooSimpleTimeDisplay')
	%script( type="text/html" )
		{{#view timeBinding="ABoo.#{_.varName}.timeString"}}
		<span class='sansSolid' style=''>{{time}}<span>
		{{/view}}

	=  insert( _.views, "" )

- if( _.includeOnce? )
	:javascript

		/*
		 *
		*/
		ABoo.HooSimpleTimeDisplay = ABoo.HooWidget.extend({

			_maxAmount: 	0,
			_time:			0,
			//_textSting:		"00:00 / 00:00",
			//_$span:			undefined,
			//counter: 0,

			setupDidComplete: function() {

				//this._$span = $( "#"+this.id+" span:first" ); // TODO: swap this.div$.find()

				var declaredBindings = ['enabledBinding', 'maxAmountValueBinding', 'playedValueBinding'];
				this.setup_hoo_bindings_from_json( declaredBindings );



				// this._mouseClickAction = this.setup_hoo_action_from_json( 'mouseClickAction' );
			},

			readyDidChange: function( target, property ) {
				// if( target.get(property)) {}
			},

			maxAmountDidChange:  function( target, property ) {
				var newVal = target[property];
				//if(newVal!=this._maxAmount){
					this.set( '_maxAmount', newVal );
				//	this.constructTextString();
				//}
			},

			playedDidChange: function( target, property ) {
				var newVal = target[property];
				//if(newVal!=this._time){
					this.set( '_time', newVal);
				//	this.constructTextString();
				//}
			},

			//constructTextString: function() {
			//	var newString = formatTime(this._time) + " / "+ formatTime(this._maxAmount);
			//	if(newString != this._textSting ) {
			//		this._textSting = newString;
			//		this.setTextContent(this._textSting);
			//	}
			//},

			// we could do this with sproutcore?
			//setTextContent: function(txt) {
			//	this._$span.text( txt );
			//},

			timeString: function() {
				return newString = formatTime(this._time) + " / "+ formatTime(this._maxAmount);
			}.property('_time', '_maxAmount').cacheable(),


		});
