-# http://0.0.0.0:3000/widgets/simpleTimeDisplay?initialState=1

- push( hoo_simple_time_display )

%div[_]( data-jsclass='HooSimpleTimeDisplay' style="font-size:30px;" )
	%span 00:00 / 00:00

	=  insert( _.views, "" )

- if( _.includeOnce? )
	:javascript

		/*
		 *
		*/
		HooSimpleTimeDisplay = HooWidget.extend({

			_maxAmount: 	0,
			_time:			0,
			_textSting:		"00:00 / 00:00",
			_$span:			undefined,

			setupDidComplete: function() {

				this._$span = $( "#"+this.id+" span:first" ); // TODO: swap this.div$.find()

				var hasBinding = this.setup_hoo_binding_from_json( 'enabledBinding' );
				hasBinding = this.setup_hoo_binding_from_json( 'maxAmountValueBinding' );
				hasBinding = this.setup_hoo_binding_from_json( 'playedValueBinding' );

				this._mouseClickAction = this.setup_hoo_action_from_json( 'mouseClickAction' );
			},

			readyDidChange: function( target, property ) {
				// if( target.get(property)) {}
			},

			maxAmountDidChange:  function( target, property ) {
				var newVal = target[property];
				if(newVal!=this._maxAmount){
					this.set( '_maxAmount', newVal );
					this.constructTextString();
				}
			},

			playedDidChange: function( target, property ) {
				var newVal = target[property];
				if(newVal!=this._time){
					this.set( '_time', newVal);
					this.constructTextString();
				}
			},

			constructTextString: function() {
				var newString = formatTime(this._time) + " / "+ formatTime(this._maxAmount);
				if(newString != this._textSting ) {
					this._textSting = newString;
					this.setTextContent(this._textSting);
				}
			},

			setTextContent: function(txt) {
				this._$span.text( txt );
			}
		});
