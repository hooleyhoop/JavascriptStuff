-# http://0.0.0.0:3000/widgets/headless_mp3_test_flash

- push( headless_mp3_test_flash )

- wrapLiveObject( _, :style=>'border:1px solid black; margin:3px; background-color: white;' ) do
	= image_tag("rails.png", :style=>"padding-right: 10px; padding-top: 5px;" )

- if( _.includeOnce? )
	:javascript

		#{_.qualifiedJsClassName} = ABoo.SCView.extend({

			_state: undefined,
			_headlessFlashOb:undefined,

			didInsertElement: function() {
				this._super();
				this._state = false;
			},

			mouseUp: function(ev$) {

				if( this._state==false ) {
					var img = this.getFirstDomItemOfType("img");
					if(img) {


						var flashURL = ABoo.HeadlessSharedFlashObject.uRLForSwf( "HeadlessPlayer/lib/Debug/HeadlessPlayer" );
						this._headlessFlashOb = ABoo.HeadlessSharedFlashObject.sharedSwfForURL( flashURL, 1, 1, {autostart:'play'} );
						// NB, it only swaps in when fails to load due to flash blocker
						this._headlessFlashOb.swapInForItem( this, img );


					}
				}
			},

			// this doesn't mean that the swf is ready
			didSwapInFlash: function( swf ) {
				this._state = true;
			},

			didSwapOutFlash: function( swf ) {
				this._state = false;
			},

			flashDidLoad: function( swf ) {
				var mp3Url = this.json.mp3Url;
				this._headlessFlashOb._commandableSwf.setSwfAttribute( 'src', mp3Url );

				// this._commandablePlayer.type = 'audio/mpeg';
				// this._commandablePlayer.preload = "auto";
				this._headlessFlashOb._commandableSwf.load(); // force the audio to reset & start loading the new url
			}
		});


